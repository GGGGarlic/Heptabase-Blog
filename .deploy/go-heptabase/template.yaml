---
# Source: go-heptabase/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
imagePullSecrets:
  - name: kiila-reg
metadata:
  name: frontend-go-heptabase
  labels:
    helm.sh/chart: go-heptabase-0.1.0
    app.kubernetes.io/name: go-heptabase
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: go-heptabase/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend-go-heptabase
  labels:
    helm.sh/chart: go-heptabase-0.1.0
    app.kubernetes.io/name: go-heptabase
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: go-heptabase
    app.kubernetes.io/instance: frontend
---
# Source: go-heptabase/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-go-heptabase
  labels:
    helm.sh/chart: go-heptabase-0.1.0
    app.kubernetes.io/name: go-heptabase
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: go-heptabase
      app.kubernetes.io/instance: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go-heptabase
        app.kubernetes.io/instance: frontend
    spec:
      imagePullSecrets:
        - name: kiila-reg
      serviceAccountName: frontend-go-heptabase
      securityContext:
        {}
      containers:
        - name: go-heptabase
          securityContext:
            {}
          image: "docker pull registry.kii.la/kiila/heptabase-frontend:17e06aab-dirty"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: go-heptabase/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-go-heptabase
  labels:
    helm.sh/chart: go-heptabase-0.1.0
    app.kubernetes.io/name: go-heptabase
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "blog.kii.la"
      secretName: blog.kii.la
  rules:
    - host: "blog.kii.la"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: frontend-go-heptabase
                port:
                  number: 80
---
# Source: go-heptabase/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "frontend-go-heptabase-test-connection"
  labels:
    helm.sh/chart: go-heptabase-0.1.0
    app.kubernetes.io/name: go-heptabase
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['frontend-go-heptabase:80']
  restartPolicy: Never
